<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>nz.co.fortytwo.signalk</groupId>
	<artifactId>artemis-server</artifactId>
	<version>0.9.0-SNAPSHOT</version>
	<name>artemis-server</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<artemis.version>2.7.0</artemis.version>
		<!-- <netty.version>4.1.5.Final</netty.version> -->
		<log4j.version>2.8.2</log4j.version>
		<slf4j.version>1.7.25</slf4j.version>
		<atmosphere-version>2.5.2</atmosphere-version>
		<jackson-version>2.9.8</jackson-version>
		<jersey.version>2.28</jersey.version>
		<swagger-version>1.5.21</swagger-version>
		<graalvm.version>1.0.0-rc15</graalvm.version>
		<compiler.dir>${project.build.directory}/compiler</compiler.dir>
	</properties>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>Tasman Consulting Ltd</name>
		<url>www.42.co.nz</url>
	</organization>
	<developers>
		<developer>
			<id>rob42</id>
			<name>Robert Huitema</name>
			<email>robert@42.co.nz</email>
		</developer>
	</developers>
	<repositories>

		<repository>
			<id>eclipse-paho</id>
			<url>https://repo.eclipse.org/content/repositories/paho-releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>

	</repositories>
	<dependencies>

		<!-- apache licence -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-web</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-1.2-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jcl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jul</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<!-- jGit -->
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>5.0.1.201806211838-r</version>
		</dependency>
		<!-- jackson amd jboss needed for logging -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.10.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.10.5</version>
			<!-- <scope>runtime</scope> -->
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.10.5</version>
			<!-- <scope>runtime</scope> -->
		</dependency>
		<dependency>
			<groupId>org.jboss.logmanager</groupId>
			<artifactId>jboss-logmanager</artifactId>
			<version>1.5.3.Final</version>
		</dependency>
		<!-- apache licence -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.19</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-pool2 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>artemis-server</artifactId>
			<version>${artemis.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>artemis-core-client</artifactId>
			<version>${artemis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>artemis-amqp-protocol</artifactId>
			<version>${artemis.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>artemis-stomp-protocol</artifactId>
			<version>${artemis.version}</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
			<version>4.1.30.Final</version>
		</dependency>
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-runtime</artifactId>
			<version>${atmosphere-version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>com.sun.jersey</groupId> -->
		<!-- <artifactId>jersey-server</artifactId> -->
		<!-- <version>1.19.4</version> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>nettosphere</artifactId>
			<version>3.0.11</version>
			<!-- <version>2.4.4</version> -->
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.influxdb</groupId>
			<artifactId>influxdb-java</artifactId>
			<version>2.15</version>
		</dependency>
		<!-- swagger -->
		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-jaxrs -->
		<!-- https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-core -->
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-core</artifactId>
			<version>2.0.5</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-jaxrs2</artifactId>
			<version>2.0.5</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-jaxrs2-servlet-initializer</artifactId>
			<version>2.0.5</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/com.sun.jersey/jersey-servlet -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.sun.jersey/jersey-json -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>25.1-jre</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.bouncycastle/bcpkix-jdk15on -->
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk15on</artifactId>
			<version>1.60</version>
		</dependency>
		<!-- xml BSD -->
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>

		<dependency>
			<groupId>com.fazecast</groupId>
			<artifactId>jSerialComm</artifactId>
			<version>2.4.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.6</version>

		</dependency>

		<!-- zeroconf apache licence -->
		<dependency>
			<groupId>org.jmdns</groupId>
			<artifactId>jmdns</artifactId>
			<version>3.5.1</version>

		</dependency>
		<!-- commons and misc = apache licence -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>

		<!-- MIT -->
		<dependency>
			<groupId>com.coveo</groupId>
			<artifactId>nashorn-commonjs-modules</artifactId>
			<version>1.0.9</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.9.7</version>
			<scope>compile</scope>
		</dependency>
		<!-- test> -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<!-- <scope>test</scope> -->
		</dependency>
		<dependency>
			<groupId>org.asynchttpclient</groupId>
			<artifactId>async-http-client</artifactId>
			<version>2.4.9</version>
		</dependency>

		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>4.0.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.java-json-tools</groupId>
			<artifactId>json-schema-validator</artifactId>
			<version>2.2.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.intuit.karate</groupId>
			<artifactId>karate-apache</artifactId>
			<version>0.8.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.intuit.karate</groupId>
			<artifactId>karate-junit4</artifactId>
			<version>0.8.0</version>
			<scope>test</scope>
		</dependency>
		<!-- Graal -->
		<dependency>
			<groupId>org.graalvm.sdk</groupId>
			<artifactId>graal-sdk</artifactId>
			<version>${graalvm.version}</version>
		</dependency>
		<dependency>
			<groupId>org.graalvm.js</groupId>
			<artifactId>js</artifactId>
			<version>${graalvm.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.graalvm.js</groupId>
			<artifactId>js-scriptengine</artifactId>
			<version>${graalvm.version}</version>
		</dependency>
		<dependency>
			<groupId>org.graalvm.tools</groupId>
			<artifactId>profiler</artifactId>
			<version>${graalvm.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.graalvm.tools</groupId>
			<artifactId>chromeinspector</artifactId>
			<version>${graalvm.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.1</version>
				<configuration>
					<argLine>-XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI
						--module-path=${compiler.dir}
						--upgrade-module-path=${compiler.dir}/compiler.jar</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.graalvm.compiler</groupId>
									<artifactId>compiler</artifactId>
									<version>${graalvm.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<destFileName>compiler.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>org.graalvm.truffle</groupId>
									<artifactId>truffle-api</artifactId>
									<version>${graalvm.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<destFileName>truffle-api.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>org.graalvm.sdk</groupId>
									<artifactId>graal-sdk</artifactId>
									<version>${graalvm.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<destFileName>graal-sdk.jar</destFileName>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${compiler.dir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- Use this to generate pojo files for swagger docs -->
			<!-- <plugin> -->
			<!-- <groupId>org.jsonschema2pojo</groupId> -->
			<!-- <artifactId>jsonschema2pojo-maven-plugin</artifactId> -->
			<!-- <version>0.5.1</version> -->
			<!-- <configuration> -->
			<!-- <sourceType>json</sourceType> -->
			<!-- <sourceDirectory>${basedir}/src/test/resources/swagger</sourceDirectory> -->
			<!-- <targetPackage>org.signalk.schema</targetPackage> -->
			<!-- <includeAccessors>false</includeAccessors> -->
			<!-- <generateBuilders>true</generateBuilders> -->
			<!-- <outputDirectory>${basedir}/src/main/java</outputDirectory> -->
			<!-- <useCommonsLang3>true</useCommonsLang3> -->
			<!-- </configuration> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <goals> -->
			<!-- <goal>generate</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>default-cli</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<longModulepath>false</longModulepath>
							<arguments>
								<argument>-classpath</argument>
								<classpath />
								<argument>-Xmx256M</argument>
								<argument>-XX:+HeapDumpOnOutOfMemoryError</argument>
								<argument>-Dio.netty.leakDetection.level=ADVANCED</argument>
								<argument>-XX:+UnlockExperimentalVMOptions</argument>
<!-- Uncomment these to run the Graal compiler -->
<!-- note the first two start with '- -' ** Remove the space!! Had to do that to allow commenting in XML-->
<!-- 								<argument>- -module-path=${compiler.dir}/graal-sdk.jar:${compiler.dir}/truffle-api.jar</argument> -->
<!-- 								<argument>- -upgrade-module-path=${compiler.dir}/compiler.jar</argument> -->
<!-- 								<argument>-Dcom.sun.management.jmxremote</argument> -->
<!-- 								<argument>-XX:StartFlightRecording=disk=true,dumponexit=true,filename=recording.jfr</argument> -->
<!-- 								<argument>-XX:+UnlockDiagnosticVMOptions</argument> -->
<!-- 								<argument>-XX:+DebugNonSafepoints</argument> -->
<!-- 								<argument>-XX:+EnableJVMCI</argument> -->
<!-- 								<argument>- -upgrade-module-path=${compiler.dir}/compiler.jar</argument> -->
								<argument>nz.co.fortytwo.signalk.artemis.server.ArtemisServer</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<mainClass>nz.co.fortytwo.signalk.artemis.server.ArtemisServer</mainClass>
					<includePluginDependencies>false</includePluginDependencies>
					<executable>${JAVA_HOME}/bin/java</executable>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.10,)
										</versionRange>
										<goals>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-compiler-plugin
										</artifactId>
										<versionRange>
											[3.8,)
										</versionRange>
										<goals>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>